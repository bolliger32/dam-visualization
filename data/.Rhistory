##################################################################################
### THIS SCRIPT DOWNLOADS THE NID DAMS DATA SET, CLEANS IT, AND RESAVES IT AS .CSV
##################################################################################
### DEFINE YOUR NATEL DIRECTORY - uncomment this when working in Rstudio
#setwd("~/dam-visualization/scripts")
library(dams)
library(dplyr)
library(rjson)
dams <- get_nid()
dams_bu <- dams
### SELECT COLUMNS OF INTEREST - THESE WILL BE NARROWED DOWN LATER
dams <- dams %>%
select(Dam_Name,NID_ID,Longitude,Latitude,River,Owner_Name,Owner_Type,Dam_Type,Primary_Purpose,All_Purposes,Year_Completed,Dam_Length,Dam_Height,Structural_Height,Hydraulic_Height,NID_Height,Max_Discharge,Max_Storage,Normal_Storage,NID_Storage,Surface_Area,Drainage_Area,Permitting_Authority,State_Reg_Dam,State_Reg_Agency, Fed_Owner, Fed_Operation, Source_Agency, State,Url_Address,Submit_Date)
### THROW OUT ROWS WITH N/A LAT OR LONG
dams <- dams[!is.na(dams$Latitude)&!is.na(dams$Longitude),]
View(dams)
damstest <- dams %>%
rename(lat = Latitude)
View(damstest)
damstest <- dams %>%
rename(lat = Latitude) %>%
rename(lng = Longitude)
dams <- dams_bu
### SELECT COLUMNS OF INTEREST - THESE WILL BE NARROWED DOWN LATER
dams <- dams %>%
select(Dam_Name,NID_ID,Latitude,Longitude,River,Owner_Name,Owner_Type,Dam_Type,Primary_Purpose,All_Purposes,Year_Completed,Dam_Length,Dam_Height,Structural_Height,Hydraulic_Height,NID_Height,Max_Discharge,Max_Storage,Normal_Storage,NID_Storage,Surface_Area,Drainage_Area,Permitting_Authority,State_Reg_Dam,State_Reg_Agency, Fed_Owner, Fed_Operation, Source_Agency, State,Url_Address,Submit_Date)
### THROW OUT ROWS WITH N/A LAT OR LONG
dams <- dams[!is.na(dams$Latitude)&!is.na(dams$Longitude),]
### CHANGE LAT LONG COLUMN NAMES TO MAKE MORE COMPATIBLE WITH csv-geoJson PLUGIN
dams <- dams %>%
rename(lat = Latitude) %>%
rename(lng = Longitude) %>%
q
dams <- dams %>%
rename(lat = Latitude) %>%
rename(lng = Longitude)
getwd()
read.csv("data/data.csv")
testtable <- read.csv("data/data.csv")
View(testtable)
testtable <- read.csv("data/data.csv", sep="|")
write.csv(dams, file="../data/dams.csv",row.names = F,sep="|")
setwd("~/dam-visualization/scripts")
write(dams, file="../data/dams.csv",row.names = F,sep="|")
write(dams, file="../data/dams.csv",sep="|")
write.csv(dams, file="../data/dams.csv",sep="|")
?write.csv
testtable <- read.csv("data/data.csv", sep="\t")
setwd("C:/Users/Carmen/leaflet-simple-csv")
testtable <- read.csv("data/data.csv", sep="\t")
testtable <- read.csv("data/data.csv", sep="\|"
testtable <- read.csv("data/data.csv", sep="\n"
)
testtable <- read.csv("data/data.csv", sep="\n")
testtable <- read.csv("data/data.csv", sep="|")
setwd("~/dam-visualization/scripts")
write.csv(dams, file="../data/dams.csv",sep="|")
write.table(dams, file="../data/dams.csv",sep="|")
setwd("~/dam-visualization/data")
testdams <- read.csv("dams.csv",sep="|")
View(testdams)
names(dams)
titles <- as.list(names(dams))
titles
titles <- as.vector(names(dams))
titles
View(titles)
titles
titles[1]
titles_string <- 0
titles_string <- 0
for(i in 1:length(titles)) {
title <- titles[1]
titles_string <- paste(titles_string, title, sep=",")
}
titles_string
titles_string <- 0
for(i in 1:length(titles)) {
title <- titles[i]
titles_string <- paste(titles_string, title, sep=",")
}
titles_string
titles_string <- 0
for(i in 1:length(titles)) {
title <- titles[i]
titles_string <- paste(titles_string, title, sep="','")
}
titles_string
setwd("~/dam-visualization/data")
read.csv("dams.csv")
dams <- read.csv("dams.csv", sep="|")
titles <- names(dams)
titles_string <- 0
for(i in 1:length(titles)) {
title <- titles[i]
titles_string <- paste(titles_string, title, sep="','")
}
titles_string
## Create a string of column names from dams dataset to paste into javascript
### DEFINE YOUR NATEL DIRECTORY - uncomment this when working in Rstudio
#setwd("~/dam-visualization/data")
dams <- read.csv("dams.csv", sep="|")
titles <- names(dams)
titles_string <- 0
for(i in 1:length(titles)) {
title <- titles[i]
titles_string <- paste(titles_string, title, sep="','")
}
titles_string
write(titles_string, file="titles.txt")
as.character(titles_string)
class(titles_string)
titles_string <- "''"
titles_string
titles_string <- "''"
for(i in 1:length(titles)) {
title <- titles[i]
titles_string <- paste(titles_string, title, sep="','")
}
titles_string
write(titles_string, file="titles.txt")
itles <- names(dams)
titles_string <- "'"
for(i in 1:length(titles)) {
title <- titles[i]
titles_string <- paste(titles_string, title, sep="','")
}
titles_string
titles <- names(dams)
titles_string <- "'"
for(i in 1:length(titles)) {
title <- titles[i]
titles_string <- paste(titles_string, title, sep="','")
}
titles_string
titles_string <- paste(titles_string,"'",sep="")
titles_string
titles_string <- titles_string.pop[3]
titles_string <- substring(titles_string,3)
titles_string
titles_string <- "'"
for(i in 1:length(titles)) {
title <- titles[i]
titles_string <- paste(titles_string, title, sep="','")
}
titles_string <- paste(titles_string,"'",sep="")
titles_string <- substring(titles_string,4)
titles_string
write(titles_string, file="titles.txt")
write.csv(dams, file="../data/dams.csv",sep=",",header=T)
write.csv(dams, file="../data/dams.csv",sep=",",row.names = F)
write.csv(dams, file="../data/dams.csv",sep=",",row.names = F, quote=F)
write.csv(dams, file="../data/dams.csv",sep=",",row.names = F, quote=F)
write.csv(dams, file="../data/dams.csv",row.names = F, quote=F)
##################################################################################
### THIS SCRIPT DOWNLOADS THE NID DAMS DATA SET, CLEANS IT, AND RESAVES IT AS .CSV
##################################################################################
### DEFINE YOUR NATEL DIRECTORY - uncomment this when working in Rstudio
#setwd("~/dam-visualization/scripts")
library(dams)
library(dplyr)
dams <- get_nid()
dams_bu <- dams
### SELECT COLUMNS OF INTEREST - THESE WILL BE NARROWED DOWN LATER
dams <- dams %>%
select(Dam_Name,NID_ID,Latitude,Longitude,River,Owner_Name,Owner_Type,Dam_Type,Primary_Purpose,All_Purposes,Year_Completed,Dam_Length,Dam_Height,Structural_Height,Hydraulic_Height,NID_Height,Max_Discharge,Max_Storage,Normal_Storage,NID_Storage,Surface_Area,Drainage_Area,Permitting_Authority,State_Reg_Dam,State_Reg_Agency, Fed_Owner, Fed_Operation, Source_Agency, State,Url_Address,Submit_Date)
### THROW OUT ROWS WITH N/A LAT OR LONG
dams <- dams[!is.na(dams$Latitude)&!is.na(dams$Longitude),]
### SAVE AS .CSV
write.csv(dams, file="../data/dams.csv",row.names = F, quote=F)
### SAVE AS GeoJSON
damsjson <- toJSON(dams)
plot(damsjson)
write(damsjson, file="dams_geojson.json")
getwd()
summary(dams$Latitude)
summary(dams$Longitude)
##################################################################################
### THIS SCRIPT DOWNLOADS THE NID DAMS DATA SET, CLEANS IT, AND RESAVES IT AS .CSV
##################################################################################
### DEFINE YOUR NATEL DIRECTORY - uncomment this when working in Rstudio
#setwd("~/dam-visualization/scripts")
library(dams)
library(dplyr)
dams <- get_nid()
dams_bu <- dams
### SELECT COLUMNS OF INTEREST - THESE WILL BE NARROWED DOWN LATER
dams <- dams %>%
select(Dam_Name,NID_ID,Latitude,Longitude,River,Owner_Name,Owner_Type,Dam_Type,Primary_Purpose,All_Purposes,Year_Completed,Dam_Length,Dam_Height,Structural_Height,Hydraulic_Height,NID_Height,Max_Discharge,Max_Storage,Normal_Storage,NID_Storage,Surface_Area,Drainage_Area,Permitting_Authority,State_Reg_Dam,State_Reg_Agency, Fed_Owner, Fed_Operation, Source_Agency, State,Url_Address,Submit_Date)
### THROW OUT ROWS WITH N/A LAT OR LONG
dams <- dams[!is.na(dams$Latitude)&!is.na(dams$Longitude),]
### CHANGE LAT LONG COLUMN NAMES TO MAKE MORE COMPATIBLE WITH csv-geoJson PLUGIN
dams <- dams %>%
rename(latitutde = Latitude) %>%
rename(longitude = Longitude)
### SAVE AS .CSV
write.csv(dams, file="../data/dams.csv",row.names = F, quote=F)
### SAVE AS GeoJSON
damsjson <- toJSON(dams)
plot(damsjson)
write(damsjson, file="dams_geojson.json")
getwd()
dams <- dams_bu
### SELECT COLUMNS OF INTEREST - THESE WILL BE NARROWED DOWN LATER
dams <- dams %>%
select(Dam_Name,NID_ID,Latitude,Longitude,River,Owner_Name,Owner_Type,Dam_Type,Primary_Purpose,All_Purposes,Year_Completed,Dam_Length,Dam_Height,Structural_Height,Hydraulic_Height,NID_Height,Max_Discharge,Max_Storage,Normal_Storage,NID_Storage,Surface_Area,Drainage_Area,Permitting_Authority,State_Reg_Dam,State_Reg_Agency, Fed_Owner, Fed_Operation, Source_Agency, State,Url_Address,Submit_Date)
### THROW OUT ROWS WITH N/A LAT OR LONG
dams <- dams[!is.na(dams$Latitude)&!is.na(dams$Longitude),]
### CHANGE LAT LONG COLUMN NAMES TO MAKE MORE COMPATIBLE WITH csv-geoJson PLUGIN
dams <- dams %>%
rename(latitude = Latitude) %>%
rename(longitude = Longitude)
### SAVE AS .CSV
write.csv(dams, file="../data/dams.csv",row.names = F, quote=F)
getwd()
read.csv("airports.csv")
read.csv("dams.csv")
dams.readtest <- read.csv("dams.csv", row.name = F)
View(dams)
airports.readtest <- read.csv("airports.csv")
View(airports.readtest)
dams.readtest <- read.csv("dams.csv")
?read.csv
write.csv(dams, file="../data/dams.csv",row.names = T, quote=F)
dams.readtest <- read.csv("dams.csv")
write.csv(dams, file="../data/dams.csv",row.names = T, quote=F)
dams.readtest <- read.csv("dams.csv")
getwd()
write.csv(dams, file="dams.csv",row.names = T, quote=F)
summary(dams[1])
!unique(dams[1])
?unique
length(unique(dams[1]))
length(unique(dams$Dam_Name))
length(dams$Dam_Name)
names(dam)
names(dams)
key <- seq(0,nrow(dams))
View(key)
key <- seq(1,nrow(dams))
length(key)
dams(cbind(key, dams))
dams<-cbind(key, dams)
View(dams)
write.csv(dams, file="dams.csv",row.names = F, quote=F)
write.csv(dams, file="dams.csv",row.names = F, quote=F)
dams.readtest <- read.csv("dams.csv")
getwd()
airports.readtest <- read.csv("airports.csv")
dams.readtest <- read.csv("dams.csv")
dams.readtest <- read.csv("dams.csv", row.names = F)
dams.readtest <- read.csv("dams.csv", row.names = T)
?read.csv
dams.readtest <- read.csv("dams.csv", row.names = T, header=T)
dams.readtest <- read.csv("dams.csv", row.names = T, header=T, quote="")
dams.readtest <- read.csv("dams.csv", header=T, quote="")
dams.readtest <- read.csv("dams.csv", header=T, quote="", check.names = F)
dams.readtest <- read.table("dams.csv",sep=",")
ncol(dams)
getwd()
write.csv(dams, file="dams.csv",row.names = F, quote=F)
dams.readtest <- read.table("dams.csv",sep=",")
dams.readtest <- read.csv("dams.csv",sep=",")
dams.readtest <- read.csv("dams.csv",row.names=1)
dams.readtest <- read.csv("dams.csv",row.names=1)
dams.readtest <- read.csv("dams.csv",row.names=NULL)
View(dams.readtest)
damstest <- dams[,c(1,3,4)]
View(damstest)
damstest <- dams[,c(1,3:5)]
write.csv(damstest, file="damstest.csv")
dams.readtest <- read.csv("damstest.csv")
nrow(dams)
nrow(damstest)
write.csv(damstest, file="damstest.csv", quote=F)
write.csv(damstest, file="damstest.csv", row.names = F, quote=F)
